[versions]
kotlin = "2.0.21"
agp = "8.13.0"
compose-bom = "2025.02.00"
compose-compiler = "1.6.11"
activity-compose = "1.9.2"
coil = "2.7.0"
core-ktx = "1.13.1"
kotlinx-coroutines-test = "1.8.1"
lifecycle = "2.8.6"
paging = "3.3.2"
room = "2.6.1"
hilt = "2.52"
ksp = "2.0.21-1.0.25"
retrofit = "2.11.0"
okhttp = "4.12.0"
moshi = "1.15.1"
detekt = "1.23.6"
versions-plugin = "0.51.0"
media3-exoplayer = "1.8.0"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library     = { id = "com.android.library",     version.ref = "agp" }
kotlin-android      = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
ksp                 = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt                = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
secrets             = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version = "2.0.1" }
detekt              = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
versions            = { id = "com.github.ben-manes.versions", version.ref = "versions-plugin" }

[libraries]
# Compose BOM + artifacts (BOM aligns versions)
compose-bom         = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui          = { module = "androidx.compose.ui:ui" }
compose-ui-tooling  = { module = "androidx.compose.ui:ui-tooling" }
compose-material3   = { module = "androidx.compose.material3:material3" }
compose-runtime     = { module = "androidx.compose.runtime:runtime" }
activity-compose    = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }

# Core / lifecycle
core-ktx            = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines-test" }
lifecycle-runtime-ktx    = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-ktx  = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }

# Paging
paging-runtime      = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }
paging-compose      = { module = "androidx.paging:paging-compose", version.ref = "paging" }

# Room (KSP)
room-runtime        = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx            = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler       = { module = "androidx.room:room-compiler", version.ref = "room" }

# Hilt (KSP)
hilt-android        = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler       = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }

# Networking
retrofit-core       = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi      = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
okhttp              = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging      = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
moshi               = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-kotlin        = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }

# Images
coil-compose        = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# Detekt formatting helper
detekt-formatting   = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

# Test libs
junit4              = { module = "junit:junit", version = "4.13.2" }
media3-exoplayer = { group = "androidx.media3", name = "media3-exoplayer", version.ref = "media3-exoplayer" }

# (optional) bundles
[bundles]
compose-core = ["compose-ui", "compose-material3", "compose-runtime", "activity-compose"]



